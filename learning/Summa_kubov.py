#Известно, что любое натуральное число можно представить в виде суммы не более чем четырех квадратов натуральных чисел.
#Вася решил придумать аналогичное утверждение для кубов - он хочет узнать, сколько кубов достаточно для представления
#любого числа. Его первая рабочая гипотеза - восемь.
#Выяснилось, что почти все чиcла, которые Вася смог придумать, представляются в виде суммы не более чем восьми кубов.
#Однако число 239, например, не допускает такого представления. Теперь Вася хочет найти какие-либо другие такие числа,
#а также, возможно, какую-либо закономерность в представлениях всех остальных чисел, чтобы выдвинуть гипотезу
#относительно вида всех чисел, которые не представляются в виде суммы восьми кубов.
#Помогите Васе написать программу, которая проверяла бы, возможно ли представить данное натуральное число в виде суммы
#не более чем восьми кубов натуральных чисел, и если это возможно, то находила бы какое-либо такое представление.
#Вводится натуральное число N <= 2*10**9.

def generator(cubs):
    while True:
        for i in range(len(cubs)):
            cubs[i]+=1
            yield cubs

def get_cubs(cubs,N):
    temp=cubs
    print(temp)
    for i in range(len(cubs)):
        temp[i]=temp[i]**3
    if len(temp)>8:
        return "Imposible"
    elif sum(temp)==N:
        print('srabotal!!!!')
 #       return '123123123123123'
    elif sum(temp)>N:
        add_one_more_element(temp)
    else:
        cubs=next(gen)
        get_cubs(cubs,N)

def add_one_more_element(temp):
    for i in range(len(temp)):
        temp[i]=0
    temp.append(0)
    gen=generator(temp)
    cubs=next(gen)
    get_cubs(cubs,N)


cubs=[0,0,0,0,0,0,0,0,0,0,0,0]
N=8
gen=generator(cubs)
print(get_cubs(cubs,N))

